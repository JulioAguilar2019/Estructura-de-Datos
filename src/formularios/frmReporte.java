package formularios;

import entidades.*;
import java.io.File;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Random;
import java.util.Scanner;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.pdfbox.pdmodel.PDDocument;
import org.apache.pdfbox.pdmodel.PDPage;
import org.apache.pdfbox.pdmodel.PDPageContentStream;
import org.apache.pdfbox.pdmodel.font.PDType1Font;

public class frmReporte extends javax.swing.JFrame {

    int lineaActual;
    public DefaultTableModel modeloMaestro;
    public DefaultTableModel modeloDetalle;
    public ArrayList<Venta> lVentas;
    ArrayList<Producto> lProductos;
    Venta venta;

    public frmReporte() {
        initComponents();
        modeloMaestro = (DefaultTableModel) this.tableMaestro.getModel();
        modeloDetalle = (DefaultTableModel) this.tableDetalle.getModel();
        lVentas = new ArrayList<>();
        lProductos = new ArrayList<>();
        btnExportarCSV.setEnabled(false);
        btnExportarHTML.setEnabled(false);
        btnGenerarPDF.setEnabled(false);
        btnLimpiar.setEnabled(false);
    }

    public void RecargarTabla() {
        modeloMaestro.getDataVector().removeAllElements();
        this.modeloMaestro.fireTableDataChanged();
        for (Venta ventas : lVentas) {
            modeloMaestro.addRow(new Object[]{ventas.getId(), ventas.getCliente(), ventas.getTotal()});
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableDetalle = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableMaestro = new javax.swing.JTable();
        btnGenerar = new javax.swing.JButton();
        btnExportarCSV = new javax.swing.JButton();
        btnGenerarPDF = new javax.swing.JButton();
        btnImportarCSV = new javax.swing.JButton();
        btnExportarHTML = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        jLabel1.setText("Reportes");

        tableDetalle.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Producto", "Cantidad", "Precio unitario"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableDetalle);

        tableMaestro.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id venta", "Cliente", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableMaestro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMaestroMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tableMaestro);

        btnGenerar.setText("Generar datos");
        btnGenerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarActionPerformed(evt);
            }
        });

        btnExportarCSV.setText("Exportar CSV");
        btnExportarCSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportarCSVActionPerformed(evt);
            }
        });

        btnGenerarPDF.setText("Generar PDF");
        btnGenerarPDF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarPDFActionPerformed(evt);
            }
        });

        btnImportarCSV.setText("Importar CSV");
        btnImportarCSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImportarCSVActionPerformed(evt);
            }
        });

        btnExportarHTML.setText("Exportar HTML");
        btnExportarHTML.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportarHTMLActionPerformed(evt);
            }
        });

        btnLimpiar.setText("Limpiar tablas");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addComponent(jScrollPane2)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(475, 475, 475)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE)
                            .addComponent(btnExportarHTML, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnLimpiar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 466, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(196, 196, 196)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnGenerar, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExportarCSV, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnImportarCSV, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGenerarPDF, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(139, 139, 139))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGenerar)
                    .addComponent(btnGenerarPDF)
                    .addComponent(btnExportarHTML))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnExportarCSV)
                    .addComponent(btnImportarCSV)
                    .addComponent(btnLimpiar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnGenerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarActionPerformed
        Random rnd = new Random();
        double total = 0.0;
        for (int i = 0; i <= (int) (rnd.nextDouble() * 10 + 8); i++) {
            total = 0.0;
            Venta venta1 = new Venta();
            venta1.setId("Venta " + (i + 1));
            venta1.setCliente("Cliente " + (i + 1));
            lProductos = new ArrayList<>();

            for (int j = 0; j < (int) (rnd.nextDouble() * 4 + 4); j++) {
                Producto producto1 = new Producto();
                int cantidad = (int) (rnd.nextDouble() * 5 + 1);
                double precio = Math.round(((rnd.nextDouble() * 70 + 1) * 100) / 100);

                producto1.setNombre("Producto " + (j + 1));
                producto1.setCantidad(cantidad);
                producto1.setPrecio(precio);

                total += cantidad * precio;
                lProductos.add(producto1);
            }
            venta1.setTotal(total);
            venta1.setProducto(lProductos);

            lVentas.add(venta1);
        }
        RecargarTabla();
        btnGenerar.setEnabled(false);
        btnExportarCSV.setEnabled(true);
        btnExportarHTML.setEnabled(true);
        btnGenerarPDF.setEnabled(true);
    }//GEN-LAST:event_btnGenerarActionPerformed

    private void tableMaestroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMaestroMouseClicked
        modeloDetalle.getDataVector().removeAllElements();
        this.modeloDetalle.fireTableDataChanged();
        lineaActual = this.tableMaestro.getSelectedRow();

        for (Producto produc : lVentas.get(lineaActual).getProducto()) {
            modeloDetalle.addRow(new Object[]{produc.getNombre(), produc.getCantidad(), produc.getPrecio()});
        }
    }//GEN-LAST:event_tableMaestroMouseClicked

    private void btnExportarCSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportarCSVActionPerformed
        PrintWriter pw = null;
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
        int result = fileChooser.showOpenDialog(this);
        File selectedFile = null;
        if (result == JFileChooser.APPROVE_OPTION) {
            selectedFile = fileChooser.getSelectedFile();
            System.out.println("Archivo seleccionado: " + selectedFile.getAbsolutePath());
        }
        try {
            pw = new PrintWriter(new File(selectedFile.getAbsolutePath()));
        } catch (Exception e) {
            System.out.println("ERROR: " + e.toString());
        }

        StringBuilder strLinea = new StringBuilder();
        String ColumnNamesList = "Venta,Cliente,Total,Producto,Cantidad,Precio unitario";

        strLinea.append(ColumnNamesList + "\n");
        String texto = "";

        for (Venta ventas : lVentas) {
            texto += ventas.getId() + "," + ventas.getCliente() + "," + ventas.getTotal() + ",";
            for (Producto produc : ventas.getProducto()) {
                texto += produc.getNombre() + "," + produc.getCantidad() + "," + produc.getPrecio() + "\n";
                texto += "\t\t\t";
            }
            texto += "\n";
        }
        strLinea.append(texto);
        pw.write(strLinea.toString());
        pw.close();
        JOptionPane.showMessageDialog(null, "Exportado correctamente", "Información", JOptionPane.INFORMATION_MESSAGE);

    }//GEN-LAST:event_btnExportarCSVActionPerformed

    private void btnGenerarPDFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarPDFActionPerformed
        String filename = "pruebadatos.pdf";

        try {
            PDDocument doc = new PDDocument();
            PDPage page = new PDPage();
            doc.addPage(page);
            int x = 80, y = 730;
            PDPageContentStream contents = new PDPageContentStream(doc, page);
            //encabezado
            contents.beginText();
            contents.setFont(PDType1Font.COURIER_BOLD, 18);
            contents.newLineAtOffset(80, 755);
            contents.showText("LISTA DE VENTAS");
            contents.endText();
            //encabezados
            contents.beginText();
            contents.setFont(PDType1Font.COURIER_BOLD, 10);
            contents.newLineAtOffset(80, 735);
            contents.showText("Id Venta    Cliente    Total   Producto    Cantidad   Precio unitario");
            contents.endText();
            //relleno
            String linea = "";
            String encabezados = "";

            for (Venta ventas : lVentas) {
                int i = 1;
                if (y - 60 < 90) {
                    contents.close();
                    x = 80;
                    y = 730;
                    page = new PDPage();
                    doc.addPage(page);
                    contents = new PDPageContentStream(doc, page);
                }
                x = 80;
                encabezados = ventas.getId() + "        " + ventas.getCliente() + "     " + ventas.getTotal();
                contents.beginText();
                contents.setFont(PDType1Font.COURIER_BOLD, 8);
                y = y - 15;
                contents.newLineAtOffset(x, y);
                contents.showText(encabezados);
                contents.endText();

                for (Producto produc : ventas.getProducto()) {

                    if (i == 1) {
                        linea = produc.getNombre() + "          " + produc.getCantidad() + "        " + produc.getPrecio();
                        contents.beginText();
                        contents.setFont(PDType1Font.COURIER, 8);
                        x = x + 185;
                        contents.newLineAtOffset(x, y);
                        contents.showText(linea);
                        contents.endText();
                    } else {
                        linea = produc.getNombre() + "          " + produc.getCantidad() + "        " + produc.getPrecio();
                        contents.beginText();
                        contents.setFont(PDType1Font.COURIER, 8);
                        y = y - 15;
                        contents.newLineAtOffset(265, y);
                        contents.showText(linea);
                        contents.endText();
                    }
                    i++;
                }

            }
            contents.close();
            doc.save(filename);
            doc.close();

            JOptionPane.showMessageDialog(null, "Generado correctamente", "Información", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception ee) {
            System.out.println(ee);
            JOptionPane.showMessageDialog(null, "Un error inesperado ha ocurrido", "Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnGenerarPDFActionPerformed

    private void btnImportarCSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImportarCSVActionPerformed
        File fArchivo = null;
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
        int result = fileChooser.showOpenDialog(this);
        File selectedFile = null;
        lProductos = new ArrayList<>();
        ArrayList<Venta> ventaTemp = new ArrayList<>();

        if (result == JFileChooser.APPROVE_OPTION) {
            selectedFile = fileChooser.getSelectedFile();
            System.out.println("Archivo seleccionado: " + selectedFile.getAbsolutePath());
        }
        try {
            Scanner scan = new Scanner(new File(selectedFile.getAbsolutePath()));
            scan.nextLine();
            venta = new Venta();
            while (scan.hasNextLine()) {
                String sLinea = scan.nextLine();
                String aLinea = sLinea.replace("\t", "");
                String[] aDatos = sLinea.split(",");
                if (aDatos.length > 3) {
                    venta.setId(aDatos[0]);
                    venta.setCliente(aDatos[1]);
                    venta.setTotal(Double.parseDouble(aDatos[2]));
                    Producto produ = new Producto();
                    produ.setNombre(aDatos[3]);
                    produ.setCantidad(Integer.parseInt(aDatos[4]));
                    produ.setPrecio(Double.parseDouble(aDatos[5]));
                    lProductos.add(produ);
                } else if (aDatos.length == 3) {
                    Producto pro = new Producto();
                    pro.setNombre(aDatos[0].trim());
                    pro.setCantidad(Integer.parseInt(aDatos[1]));
                    pro.setPrecio(Double.parseDouble(aDatos[2]));
                    lProductos.add(pro);
                } else if (aDatos.length == 1) {
                    venta.setProducto(lProductos);
                    ventaTemp.add(venta);
                    venta = new Venta();
                    lProductos = new ArrayList<>();
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Un error inesperado ha ocurrido", "Error", JOptionPane.ERROR_MESSAGE);
        }
        lVentas = new ArrayList<>();
        lVentas = ventaTemp;
        RecargarTabla();
        JOptionPane.showMessageDialog(null, "Importado correctamente", "Información", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_btnImportarCSVActionPerformed

    private void btnExportarHTMLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportarHTMLActionPerformed
        PrintWriter pw = null;
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
        int result = fileChooser.showOpenDialog(this);
        File selectedFile = null;
        if (result == JFileChooser.APPROVE_OPTION) {
            selectedFile = fileChooser.getSelectedFile();
            System.out.println("Archivo seleccionado: " + selectedFile.getAbsolutePath());
        }
        try {
            pw = new PrintWriter(new File(selectedFile.getAbsolutePath()));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Un error inesperado ha ocurrido", "Error", JOptionPane.ERROR_MESSAGE);
        }

        StringBuilder strLinea = new StringBuilder();
        strLinea.append("<html><body><table border='2'>" + "\n");
        strLinea.append("<tr><td><b>Id venta</td><td><b>Cliente</td><td><b>Total</td><td><b>Producto</td><td><b>Cantidad</td><td><b>Precio unitario</td></tr>" + "\n");
        for (int i = 0; i < lVentas.size(); i++) {

            strLinea.append("<tr>" + "\n");
            // 1 PROP
            strLinea.append("<td>");
            strLinea.append(lVentas.get(i).getId());
            strLinea.append("</td>" + "\n");
            // 2 PROP
            strLinea.append("<td>");
            strLinea.append(lVentas.get(i).getCliente());
            strLinea.append("</td>" + "\n");
            // 3 PROP
            strLinea.append("<td>");
            strLinea.append(Double.toString(lVentas.get(i).getTotal()));
            strLinea.append("</td>");
            for (int j = 0; j < lVentas.get(i).getProducto().size(); j++) {
                if (j == 0) {
                    strLinea.append("<td>");
                    strLinea.append(lVentas.get(i).getProducto().get(j).getNombre());
                    strLinea.append("</td>" + "\n");

                    strLinea.append("<td>");
                    strLinea.append(Integer.toString(lVentas.get(i).getProducto().get(j).getCantidad()));
                    strLinea.append("</td>" + "\n");

                    strLinea.append("<td>");
                    strLinea.append(Double.toString(lVentas.get(i).getProducto().get(j).getPrecio()));
                    strLinea.append("</td>" + "\n");
                } else {
                    strLinea.append("<tr>");
                    strLinea.append("<td>");
                    strLinea.append("<td>");
                    strLinea.append("<td>");
                    strLinea.append("<td>");
                    strLinea.append(lVentas.get(i).getProducto().get(j).getNombre());
                    strLinea.append("</td>" + "\n");

                    strLinea.append("<td>");
                    strLinea.append(Integer.toString(lVentas.get(i).getProducto().get(j).getCantidad()));
                    strLinea.append("</td>" + "\n");

                    strLinea.append("<td>");
                    strLinea.append(Double.toString(lVentas.get(i).getProducto().get(j).getPrecio()));
                    strLinea.append("</td>" + "\n");
                    strLinea.append("</tr>");
                }
            }
        }
        strLinea.append("</table></body></html>" + "\n");
        pw.write(strLinea.toString());
        pw.close();
    }//GEN-LAST:event_btnExportarHTMLActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        modeloMaestro.getDataVector().removeAllElements();
        this.modeloMaestro.fireTableDataChanged();
        modeloDetalle.getDataVector().removeAllElements();
        this.modeloDetalle.fireTableDataChanged();
        btnGenerar.setEnabled(true);
        btnExportarCSV.setEnabled(false);
        btnExportarHTML.setEnabled(false);
        btnGenerarPDF.setEnabled(false);
    }//GEN-LAST:event_btnLimpiarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmReporte.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmReporte.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmReporte.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmReporte.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmReporte().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExportarCSV;
    private javax.swing.JButton btnExportarHTML;
    private javax.swing.JButton btnGenerar;
    private javax.swing.JButton btnGenerarPDF;
    private javax.swing.JButton btnImportarCSV;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tableDetalle;
    private javax.swing.JTable tableMaestro;
    // End of variables declaration//GEN-END:variables
}
